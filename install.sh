#!/bin/bash

# reset shell colors
tput init

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  PROJECT_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$PROJECT_ROOT/$SOURCE"
done
PROJECT_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

# Verificar se core.sh existe
if [ ! -f "${PROJECT_ROOT}/core.sh" ]; then
    echo "Erro: arquivo core.sh n√£o encontrado"
    exit 1
fi

# Defini√ß√£o das cores
RED="\033[1;31m"
GREEN="\033[1;32m"
BLUE="\033[1;34m"
WHITE="\033[1;37m"
YELLOW="\033[1;33m"
GRAY_LIGHT="\033[0;37m"
CYAN_LIGHT="\033[1;36m"
NC="\033[0m"

# Fun√ß√£o para exibir o banner apenas no terminal
print_banner() {
  clear
  printf "\n\n"
  printf "${BLUE}"
  printf " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó \n"
  printf "‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù \n"
  printf "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   \n"
  printf "‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù   \n"
  printf "‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó \n"
  printf "‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù    ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù \n"
  printf "            \033[1;37m        ¬©lucassaud\n"
  printf "${NC}"
  printf "\n"
}
# Incluir o arquivo de fun√ß√µes e exportar
set -a
source "${PROJECT_ROOT}/core.sh"
set +a

# Garantir que as fun√ß√µes do core.sh est√£o dispon√≠veis
if ! declare -F install_autoatende > /dev/null; then
    echo "Erro: fun√ß√£o install_autoatende n√£o encontrada"
    exit 1
fi

# Fun√ß√£o para remover software
software_delete() {
  print_banner
  printf "${WHITE} üíª Selecione o tipo de remo√ß√£o:${GRAY_LIGHT}"
  printf "\n\n"
  printf "   [1] Remover uma inst√¢ncia\n"
  printf "   [2] Remover sistema por completo\n"
  printf "   [3] Voltar\n"
  printf "\n"
  read -p "> " delete_type

  case "${delete_type}" in
    1) remove_instance ;;
    2) remove_complete_system ;;
    3) show_system_menu ;;
    *) echo "Op√ß√£o inv√°lida" && sleep 2 && software_delete ;;
  esac
}

# Menu principal
get_install_type() {
  print_banner
  printf "${WHITE} üíª Selecione o tipo de instala√ß√£o:${GRAY_LIGHT}"
  printf "\n\n"
  printf "   [1] Instala√ß√£o Prim√°ria (Primeira instala√ß√£o no servidor)\n"
  printf "   [2] Instala√ß√£o de Inst√¢ncia (Adicionar nova inst√¢ncia)\n"
  printf "   [3] Sair\n"
  printf "\n"
  read -p "> " install_type

  case "${install_type}" in
    1) setup_logging && show_system_menu "primary" ;;
    2) setup_logging && show_system_menu "instance" ;;
    3) exit 0 ;;
    *) echo "Op√ß√£o inv√°lida" && sleep 2 && get_install_type ;;
  esac
}

# Menu do sistema
show_system_menu() {
  local installation_type=$1
  
  while true; do
    print_banner
    printf "${WHITE} üíª Selecione a a√ß√£o desejada:${GRAY_LIGHT}"
    printf "\n\n"
    printf "   [1] Instalar AutoAtende\n"
    printf "   [2] Remover AutoAtende\n"
    printf "   [3] Otimizar Sistema\n"
    printf "   [4] Voltar\n"
    printf "\n"
    read -p "> " option

    case "${option}" in
      1) 
        get_urls
        if [ $? -eq 0 ]; then
          install_autoatende "$installation_type"
          if [ $? -eq 0 ]; then
            break
          fi
        fi
        ;;
      2) software_delete && break ;;
      3) optimize_system && show_system_menu "$installation_type" ;;
      4) get_install_type && break ;;
      *) echo "Op√ß√£o inv√°lida" && sleep 2 ;;
    esac
  done
}

# Iniciar o instalador
print_banner
get_install_type