#!/bin/bash

get_mysql_root_password() {
  print_banner
  printf "${WHITE} üíª Insira senha para o usuario Deploy e Banco de Dados (N√£o utilizar caracteres especiais):${GRAY_LIGHT}"
  printf "\n\n"
  read -p "> " mysql_root_password
}

get_instancia_add() {
  print_banner
  printf "${WHITE} üíª Informe um nome para a Instancia/Empresa que ser√° instalada (N√£o utilizar espa√ßos ou caracteres especiais, Utilizar Letras minusculas; ):${GRAY_LIGHT}"
  printf "\n\n"
  read -p "> " instancia_add
}

get_token_code() {
  print_banner
  printf "${WHITE} üíª Digite o token para baixar o c√≥digo:${GRAY_LIGHT}"
  printf "\n\n"
  read -p "> " token_code
}

get_frontend_url() {
  print_banner
  printf "${WHITE} üíª Digite o dom√≠nio do FRONTEND/PAINEL para a ${instancia_add}:${GRAY_LIGHT}"
  printf "\n\n"
  read -p "> " frontend_url
}

get_backend_url() {
  print_banner
  printf "${WHITE} üíª Digite o dom√≠nio do BACKEND/API para a ${instancia_add}:${GRAY_LIGHT}"
  printf "\n\n"
  read -p "> " backend_url
}

set_default_variables() {

  max_whats=1000
  max_user=1000
  backend_port=4029
  redis_port=6379
  
  # Registrando no log
  printf "${WHITE} ‚ÑπÔ∏è Configura√ß√µes padr√£o definidas:${GRAY_LIGHT}"
  printf "\n"
  printf "   - M√°ximo de conex√µes WhatsApp: ${max_whats}\n"
  printf "   - M√°ximo de usu√°rios: ${max_user}\n"
  printf "   - Porta do backend: ${backend_port}\n"
  printf "   - Porta do Redis: ${redis_port}\n"
  printf "\n"
  sleep 2
}

get_empresa_delete() {
  print_banner
  printf "${WHITE} üíª Digite o nome da Instancia/Empresa que ser√° Deletada (Digite o mesmo nome de quando instalou):${GRAY_LIGHT}"
  printf "\n\n"
  read -p "> " empresa_delete
}

get_urls() {
  get_mysql_root_password
  get_token_code
  get_instancia_add
  get_frontend_url
  get_backend_url
  set_default_variables
}

software_delete() {
  get_empresa_delete
  deletar_tudo
}

inquiry_options() {
  print_banner
  printf "${WHITE} üíª Bem vindo(a) ao AutoAtende! Por favor, selecione uma op√ß√£o:${GRAY_LIGHT}"
  printf "\n\n"
  printf "   [0] Instalar Nova Inst√¢ncia do AutoAtende\n"
  printf "   [1] Remover uma Inst√¢ncia Existente\n"
  printf "\n"
  read -p "> " option

  case "${option}" in
    0) 
      get_urls
      ;;
    1)
      software_delete
      exit
      ;;
    *)
      printf "${RED} ‚ö†Ô∏è Op√ß√£o inv√°lida!${GRAY_LIGHT}"
      printf "\n\n"
      sleep 2
      inquiry_options
      ;;
  esac
}

validate_inputs() {
  # Valida√ß√£o da senha
  if [[ "${mysql_root_password}" =~ [[:space:]] || "${mysql_root_password}" =~ [^a-zA-Z0-9] ]]; then
    printf "${RED} ‚ö†Ô∏è A senha n√£o pode conter espa√ßos ou caracteres especiais!${GRAY_LIGHT}"
    printf "\n\n"
    get_mysql_root_password
  fi

  # Valida√ß√£o do nome da inst√¢ncia
  if [[ "${instancia_add}" =~ [[:space:]] || "${instancia_add}" =~ [^a-z0-9] ]]; then
    printf "${RED} ‚ö†Ô∏è O nome da inst√¢ncia deve conter apenas letras min√∫sculas e n√∫meros!${GRAY_LIGHT}"
    printf "\n\n"
    get_instancia_add
  fi

  # Valida√ß√£o das URLs
  if [[ ! "${frontend_url}" =~ ^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}$ ]]; then
    printf "${RED} ‚ö†Ô∏è URL do frontend inv√°lida!${GRAY_LIGHT}"
    printf "\n\n"
    get_frontend_url
  fi

  if [[ ! "${backend_url}" =~ ^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}$ ]]; then
    printf "${RED} ‚ö†Ô∏è URL do backend inv√°lida!${GRAY_LIGHT}"
    printf "\n\n"
    get_backend_url
  fi
}

# Fun√ß√£o para mostrar o resumo das configura√ß√µes
show_config_summary() {
  print_banner
  printf "${WHITE} üìù Resumo das Configura√ß√µes:${GRAY_LIGHT}"
  printf "\n\n"
  printf "   ‚Ä¢ Nome da Inst√¢ncia: ${instancia_add}\n"
  printf "   ‚Ä¢ URL do Frontend: ${frontend_url}\n"
  printf "   ‚Ä¢ URL do Backend: ${backend_url}\n"
  printf "   ‚Ä¢ Porta do Backend: ${backend_port}\n"
  printf "   ‚Ä¢ Porta do Redis: ${redis_port}\n"
  printf "   ‚Ä¢ Limite de Usu√°rios: ${max_user}\n"
  printf "   ‚Ä¢ Limite de Conex√µes WhatsApp: ${max_whats}\n"
  printf "\n"
  printf "${WHITE} ‚ùì Deseja continuar com a instala√ß√£o? [S/n]${GRAY_LIGHT}"
  printf "\n\n"
  read -p "> " confirm
  
  if [[ "${confirm}" =~ ^[Nn] ]]; then
    printf "${YELLOW} ‚ö†Ô∏è Instala√ß√£o cancelada pelo usu√°rio.${GRAY_LIGHT}"
    printf "\n\n"
    exit 1
  fi
}